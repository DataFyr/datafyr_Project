<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>